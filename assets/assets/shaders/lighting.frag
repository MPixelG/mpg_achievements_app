{
  "sksl": {
    "entrypoint": "lighting_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 screenSize;\nuniform vec3 lightPos;\nuniform float heightScale;\nuniform float testUniform;\nuniform shader albedoMap;\nuniform half2 albedoMap_size;\nuniform shader depthMap;\nuniform half2 depthMap_size;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvec3 FLT_flutter_local_calculateBasicLighting(vec3 lightPos_1)\n{\n    vec2 uv = FLT_flutter_local_FlutterFragCoord() / screenSize;\n    vec4 depthMapPixel = depthMap.eval(depthMap_size * ( uv));\n    vec2 nxy = (depthMapPixel.xy * 2.0) - vec2(1.0);\n    float nz = sqrt(max(0.0, (1.0 - (nxy.x * nxy.x)) - (nxy.y * nxy.y)));\n    vec3 n = normalize(vec3(nxy, nz));\n    float height = depthMapPixel.z;\n    vec3 fragPos = vec3(uv, height);\n    vec3 L = lightPos_1 - fragPos;\n    float dist = length(L);\n    L = normalize(L);\n    float NdotL = max(dot(n, L), 0.0);\n    float range = 2.2000000476837158203125;\n    float att = 1.0 / (1.0 + ((16.0 * (dist / range)) * (dist / range)));\n    vec3 lightColor = vec3(1.0, 0.699999988079071044921875, 0.75);\n    vec3 diffuse = lightColor * NdotL;\n    return diffuse * ((depthMapPixel.z / 5.0) + 0.75);\n}\n\nvoid FLT_main()\n{\n    vec3 adjustedLightPos = lightPos;\n    vec2 uv_1 = FLT_flutter_local_FlutterFragCoord() / screenSize;\n    vec4 albedoPixel = albedoMap.eval(albedoMap_size * ( uv_1));\n    vec4 normalPixel = depthMap.eval(depthMap_size * ( uv_1));\n    float pixelHeight = normalPixel.z;\n    if (normalPixel.w == 0.0)\n    {\n        return;\n    }\n    float heightScale_1 = 0.5;\n    vec3 fragPos_1 = vec3(uv_1, pixelHeight * heightScale_1);\n    vec3 dirToLight = normalize(adjustedLightPos - fragPos_1);\n    vec3 param = adjustedLightPos;\n    vec3 diffuse_1 = FLT_flutter_local_calculateBasicLighting(param);\n    vec3 color = albedoPixel.xyz * (vec3(0.2199999988079071044921875, 0.20000000298023223876953125, 0.20000000298023223876953125) + diffuse_1);\n    fragColor = vec4(color, albedoPixel.w);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 0,
        "columns": 1,
        "location": 0,
        "name": "albedoMap",
        "rows": 1,
        "type": 12
      },
      {
        "array_elements": 0,
        "bit_width": 0,
        "columns": 1,
        "location": 1,
        "name": "depthMap",
        "rows": 1,
        "type": 12
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "screenSize",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 3,
        "name": "lightPos",
        "rows": 3,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 4,
        "name": "heightScale",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 5,
        "name": "testUniform",
        "rows": 1,
        "type": 10
      }
    ]
  }
}